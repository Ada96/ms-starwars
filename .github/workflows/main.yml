# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install ðŸ”§
        run: npm install
      
      - name: unit-test
        run : npm run unit-tests
        
      - name: integration-test
        run : npm run integration-tests
      
      - name: Test Report unit
        uses: dorny/test-reporter@v1
        if: success() || failure()          # run this step even if previous step failed
        with:
          name: mocha Tests unit            # Name of the check run which will be created
          path: ./test-results.json         # Path to test results
          reporter: mocha-json              # Format of test results
      
      - name: Test Report integration
        uses: dorny/test-reporter@v1
        if: success() || failure()          # run this step even if previous step failed
        with:
          name: mocha Tests integration     # Name of the check run which will be created
          path: ./int-test-results.json     # Path to test results
          reporter: mocha-json              # Format of test result
      
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'ms-starwars'
          path: '.'
          format: 'HTML'    
          others: ''
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
           
      - name: SonarCloud Scan
        # You may pin to the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        uses: SonarSource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: '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'
          SONAR_TOKEN: '0e51e37260136c94635ea9f3daeca0866be07404'
        with:
          # Additional arguments to the sonarcloud scanner
          args: >
            -Dsonar.organization=lhalicki
            -Dsonar.projectKey=lhalicki_ms-starwars
          # Set the sonar.projectBaseDir analysis property
          projectBaseDir: ./ 
        
        
